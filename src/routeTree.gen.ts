/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UsersImport } from './routes/users'
import { Route as UserRegisterImport } from './routes/userRegister'
import { Route as ReportImport } from './routes/report'
import { Route as NewHomeImport } from './routes/newHome'
import { Route as ModuleRegisterImport } from './routes/moduleRegister'
import { Route as ModuleImport } from './routes/module'
import { Route as HomeImport } from './routes/home'
import { Route as AuthImport } from './routes/auth'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as BitacorasImport } from './routes/bitacoras'

// Create/Update Routes

const UsersRoute = UsersImport.update({
  path: '/users',
  getParentRoute: () => rootRoute,
} as any)

const UserRegisterRoute = UserRegisterImport.update({
  path: '/userRegister',
  getParentRoute: () => rootRoute,
} as any)

const ReportRoute = ReportImport.update({
  path: '/report',
  getParentRoute: () => rootRoute,
} as any)

const NewHomeRoute = NewHomeImport.update({
  path: '/newHome',
  getParentRoute: () => rootRoute,
} as any)

const ModuleRegisterRoute = ModuleRegisterImport.update({
  path: '/moduleRegister',
  getParentRoute: () => rootRoute,
} as any)

const ModuleRoute = ModuleImport.update({
  path: '/module',
  getParentRoute: () => rootRoute,
} as any)

const BitacorasRoute = BitacorasImport.update({
  path: '/bitacoras',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/bitacoras': {
      id: '/bitacoras'
      path: '/bitacoras'
      fullPath: '/bitacoras'
      preLoaderRoute: typeof BitacorasImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/module': {
      id: '/module'
      path: '/module'
      fullPath: '/module'
      preLoaderRoute: typeof ModuleImport
      parentRoute: typeof rootRoute
    }
    '/moduleRegister': {
      id: '/moduleRegister'
      path: '/moduleRegister'
      fullPath: '/moduleRegister'
      preLoaderRoute: typeof ModuleRegisterImport
      parentRoute: typeof rootRoute
    }
    '/newHome': {
      id: '/newHome'
      path: '/newHome'
      fullPath: '/newHome'
      preLoaderRoute: typeof NewHomeImport
      parentRoute: typeof rootRoute
    }
    '/report': {
      id: '/report'
      path: '/report'
      fullPath: '/report'
      preLoaderRoute: typeof ReportImport
      parentRoute: typeof rootRoute
    }
    '/userRegister': {
      id: '/userRegister'
      path: '/userRegister'
      fullPath: '/userRegister'
      preLoaderRoute: typeof UserRegisterImport
      parentRoute: typeof rootRoute
    }
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AboutRoute,
  AuthRoute,
  BitacorasRoute,
  HomeRoute,
  ModuleRoute,
  ModuleRegisterRoute,
  NewHomeRoute,
  ReportRoute,
  UserRegisterRoute,
  UsersRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.ts",
      "children": [
        "/",
        "/about",
        "/auth",
        "/bitacoras",
        "/home",
        "/module",
        "/moduleRegister",
        "/newHome",
        "/report",
        "/userRegister",
        "/users"
      ]
    },
    "/": {
      "filePath": "index.ts"
    },
    "/about": {
      "filePath": "about.ts"
    },
    "/auth": {
      "filePath": "auth.ts"
    },
    "/bitacoras": {
      "filePath": "bitacoras.ts"
    },
    "/home": {
      "filePath": "home.ts"
    },
    "/module": {
      "filePath": "module.ts"
    },
    "/moduleRegister": {
      "filePath": "moduleRegister.ts"
    },
    "/newHome": {
      "filePath": "newHome.ts"
    },
    "/report": {
      "filePath": "report.ts"
    },
    "/userRegister": {
      "filePath": "userRegister.ts"
    },
    "/users": {
      "filePath": "users.ts"
    }
  }
}
ROUTE_MANIFEST_END */